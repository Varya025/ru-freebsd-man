.\" Copyright (c) 1980, 1990, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Распространение и использование в исходной и двоичной формах, с или без
.\" изменения разрешены при соблюдении следующих условий
.\" которые встретились:
.\" 1. При повторном распространении исходного кода необходимо сохранять вышеуказанные авторские права.
.\" обратите внимание на этот список условий и следующий отказ от ответственности.
.\" 2. При распространении в двоичной форме необходимо воспроизводить вышеуказанные авторские права.
.\" обратите внимание, этот список условий и следующий отказ от ответственности в
.\" документация и/или другие материалы, прилагаемые к дистрибутиву.
.\" 3. Ни названия университета, ни имен его сотрудников.
.\" может использоваться для одобрения или продвижения продуктов, созданных на основе этого программного обеспечения.
.\" без специального предварительного письменного разрешения.
.\"
.» ЭТО ПРОГРАММНОЕ ОБЕСПЕЧЕНИЕ ПРЕДОСТАВЛЯЕТСЯ РЕГЕНТАМИ И УЧАСТНИКАМИ «КАК ЕСТЬ» И
.» ЛЮБЫЕ ЯВНЫЕ ИЛИ ПОДРАЗУМЕВАЕМЫЕ ГАРАНТИИ, ВКЛЮЧАЯ, НО НЕ ОГРАНИЧИВАЯСЬ,
.» ПОДРАЗУМЕВАЕМЫЕ ГАРАНТИИ ТОВАРНОЙ ГОДНОСТИ И ПРИГОДНОСТИ ДЛЯ ОПРЕДЕЛЕННОЙ ЦЕЛИ
.\" ОТКАЗЫВАЮТСЯ. НИ ПРИ КАКИХ ОБСТОЯТЕЛЬСТВАХ РЕГЕНТЫ ИЛИ УЧАСТНИКИ НЕ НЕСУТ ОТВЕТСТВЕННОСТИ
.» ДЛЯ ЛЮБЫХ ПРЯМЫХ, КОСВЕННЫХ, СЛУЧАЙНЫХ, ОСОБЫХ, ПРИМЕРНЫХ ИЛИ КОСВЕННЫХ
.» УЩЕРБ (ВКЛЮЧАЯ, НО НЕ ОГРАНИЧИВАЯСЬ), ПРИОБРЕТЕНИЕ ТОВАРА-ЗАМЕНИТЕЛЯ
.» ИЛИ УСЛУГ; ПОТЕРЯ ИСПОЛЬЗОВАНИЯ, ДАННЫХ ИЛИ ПРИБЫЛИ; ИЛИ ПРЕРЫВАНИЕ БИЗНЕСА)
.» ОДНАКО ПРИЧИНЕННАЯ И ПО ЛЮБОЙ ТЕОРИИ ОТВЕТСТВЕННОСТИ, БЫ В ДОГОВОРЕ, СТРОГОЕ
.» ОТВЕТСТВЕННОСТЬ ИЛИ ПРАВОНАРУШЕНИЕ (ВКЛЮЧАЯ НЕБРЕЖНОСТЬ ИЛИ ДРУГИЕ ОБРАЗЫ), ВОЗНИКАЮЩИЕ ЛЮБЫМ ОБРАЗОМ
.» ОТКАЗАТЬСЯ ОТ ИСПОЛЬЗОВАНИЯ ЭТОГО ПРОГРАММНОГО ОБЕСПЕЧЕНИЯ, ДАЖЕ ЕСЛИ УВЕДОМЛЕНЫ О ВОЗМОЖНОСТИ
.\" ТАКОЙ УЩЕРБ.
.\"
.\"     From: @(#)uuencode.1	8.1 (Berkeley) 6/6/93
.\"
.Dd 18 апреля 2022 г.
.Dt BINTRANS 1
.Os
.Sh NAME
.Nm bintrans ,
.Nm uuencode ,
.Nm uudecode ,
.Nm b64encode ,
.Nm b64decode
.Nd encode/decode a binary file
.Sh SYNOPSIS
.Nm
.Op algorithm
.Op ...
.Nm uuencode
.Op Fl m
.Op Fl r
.Op Fl o Ar output_file
.Op Ar file
.Ar name
.Nm uudecode
.Op Fl cimprs
.Op Ar
.Nm uudecode
.Op Fl i
.Fl o Ar output_file
.Nm b64encode
.Op Fl r
.Op Fl w Ar column
.Op Fl o Ar output_file
.Op Ar file
.Ar name
.Nm b64decode
.Op Fl cimprs
.Op Ar
.Nm b64decode
.Op Fl i
.Fl o Ar output_file
.Op Ar file
.Nm base64
.Op Fl d
.Op Fl w Ar column
.Op Ar file
.Sh DESCRIPTION

.Nm uuencode
и
.Nm uudecode
утилиты используются для передачи двоичных файлов по средам передачи.
которые не поддерживают ничего, кроме простых
.Tn ASCII
data.

.Nm b64encode
полезность является синонимом
.Nm uuencode
с
.Fl m
указан флаг.

.Nm b64decode
полезность является синонимом
.Nm uudecode
с
.Fl m
указан флаг.
.Pp

.Nm base64
Утилита действует как декодер base64 при передаче
.Fl -decode
.Po or
.Fl d
.Pc
флаг и в качестве кодировщика base64 в противном случае.
В качестве декодера он принимает только необработанный входной сигнал base64.
и как кодер он не создает линии кадрирования.
.Nm base64
читает стандартный ввод или
.Ar file
если он предоставляется и записывает в стандартный вывод.
Параметры
.Fl -wrap
.Po or
.Fl w
.Pc
и
.Fl -ignore-garbage
.Po or
.Fl i
.Pc
приняты для совместимости с GNU base64,
но последнее не реализовано и молча игнорируется.
.Pp

.Nm uuencode
утилита читает
.Ar file
(или по умолчанию стандартный ввод) и записывает закодированную версию
на стандартный вывод или
.Ar output_file
если таковой был указан.
Кодировка использует только печать
.Tn ASCII
персонажей и включает в себя
режим файла и операнда
.Ar name
для использования
.Nm uudecode .
.Pp

.Nm uudecode
утилита преобразует
.Em uuencoded
файлы (или по умолчанию стандартный ввод) в исходную форму.
Результирующий файл называется либо
.Ar name
или (в зависимости от опций, переданных в
.Nm uudecode )
.Ar output_file
и будет иметь режим исходного файла, за исключением setuid
и биты выполнения не сохраняются.

.Nm uudecode
Утилита игнорирует любые начальные и конечные строки.
.Pp
Доступны следующие варианты для
.Nm uuencode :
.Bl -tag -width ident
.It Fl m
Используйте метод кодирования Base64 вместо традиционного.
.Nm uuencode
алгоритм.
.It Fl r
Создавайте необработанный результат, исключая начальную и конечную линии кадрирования.
.It Fl o Ar output_file
Вывод в
.Ar output_file
вместо стандартного вывода.
.El
.Pp
Доступны следующие варианты для
.Nm uudecode :
.Bl -tag -width ident
.It Fl c
Декодировать более одного файла в кодировке uu из
.Ar file
если возможно.
.It Fl i
Не перезаписывайте файлы.
.It Fl m
При использовании с
.Fl r
флаг, декодировать ввод Base64 вместо традиционного
.Nm uuencode
вход.
Без
.Fl r
это не имеет никакого эффекта.
.It Fl o Ar output_file
Вывод в
.Ar output_file
вместо любого пути, содержащегося во входных данных.
.It Fl p
Декодировать
.Ar file
и записать вывод в стандартный вывод.
.It Fl r
Декодировать необработанный (или сломанный) ввод, в котором отсутствуют начальный и
возможно, последние кадры.
Предполагается, что ввод осуществляется в традиционном формате.
.Nm uuencode
кодировка, но если
.Fl m
используется флаг или если утилита вызывается как
.Nm b64decode ,
тогда предполагается, что входные данные имеют формат Base64.
.It Fl s
Не разделяйте выходной путь до базового имени файла.
По умолчанию 
.Nm uudecode
удаляет любой префикс, заканчивающийся последней косой чертой '/' в целях безопасности
причины.
.El
.Pp
Кроме того,
.Nm b64encode
принимает следующий вариант:
.Bl -tag -width ident
.It Fl w Ar column
Перенос закодированного вывода после
.Ar column .
.El
.Pp
.Nm
это универсальная утилита, которая может запускать
любой из вышеупомянутых кодеров и декодеров.
Он также может запускать алгоритмы, которые недоступны
через специальную программу:
.Pp
.Nm qp
конвертер котировок и печати
и принимает следующие варианты:
.Bl -tag -width ident
.It Fl u
Декодировать.
.It Fl o Ar output_file
Вывод в
.Ar output_file
вместо стандартного вывода.
.Sh EXAMPLES
В следующем примере дерево исходного кода упаковывается, сжимается,
uuenкодирует его и отправляет пользователю в другой системе.
Когда
.Nm uudecode
запускается в целевой системе, файл ``src_tree.tar.Z'' будет
созданный файл, который затем можно распаковать и извлечь в оригинал.
дерево.
.Pp
.Bd -literal -offset indent -compact
tar cf \- src_tree \&| compress \&|
uuencode src_tree.tar.Z \&| mail user@example.com
.Ed
.Pp
В следующем примере распаковываются все uuencoded.
файлы из вашего почтового ящика в текущий рабочий каталог.
.Pp
.Bd -literal -offset indent -compact
uudecode -c < $MAIL
.Ed
.Pp
В следующем примере извлекается сжатый файл tar.
архив из вашего почтового ящика
.Pp
.Bd -literal -offset indent -compact
uudecode -o /dev/stdout < $MAIL | zcat | tar xfv -
.Ed
.Sh SEE ALSO
.Xr basename 1 ,
.Xr compress 1 ,
.Xr mail 1 ,
.Xr uucp 1 Pq Pa ports/net/freebsd-uucp ,
.Xr uuencode 5
.Sh HISTORY

.Nm uudecode
и
.Nm uuencode
утилиты появились в
.Bx 4.0 .
.Sh BUGS
Файлы, закодированные традиционным алгоритмом, расширяются на 35% (3
байты становятся 4 плюс управляющая информация).
